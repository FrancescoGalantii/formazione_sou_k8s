pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS = 'dockerhub-credentials'
        DOCKER_REGISTRY = 'localhost:5000'
        IMAGE_NAME = 'flask-app-example'
        dockerImage = ''
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Set Docker Image Tag') {
            steps {
                script {
                    def branch = env.GIT_BRANCH ?: 'main'
                    def sha = env.GIT_COMMIT.take(7) ?: 'unknown'
                    def tag = 'latest'

                    if (branch == 'main') {
                        tag = 'latest'
                    } else if (branch == 'develop') {
                        tag = "develop-${sha}"
                    } else if (env.GIT_TAG) {
                        tag = env.GIT_TAG
                    }
                    env.IMAGE_TAG = tag
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build ("${env.IMAGE_NAME}:${env.GIT_COMMIT}")
                }
            }
        }
        stage('Docker Push') {
            steps {
                script {
                    if (env.DOCKERHUB_CREDENTIALS) {
                        docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                            dockerImage.push()
                        }
                    } 
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
